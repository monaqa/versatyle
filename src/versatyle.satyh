%vim: fdm=marker

module Versatyle : sig

  direct \math : [math] inline-cmd
  direct +p : [inline-text] block-cmd

  val document : block-text -> document

end = struct

  let-inline ctx \math m = 
    script-guard Latin (embed-math ctx m)

  let-block ctx +p it =
    line-break true true ctx
      (read-inline ctx it ++ inline-fil)

  let text-width = 440pt
  let text-height = 630pt
  let text-origin-pos = (60pt, 100pt)

  let document bt =

    let ctx =
      get-initial-context text-width (command \math)
        |> set-dominant-wide-script Kana
        |> set-language Kana Japanese
        |> set-language HanIdeographic Japanese
        |> set-dominant-narrow-script Latin
        |> set-language Latin English
        |> set-font Kana           (`ipaexm`, 0.88, 0.)
        |> set-font HanIdeographic (`ipaexm`, 0.88, 0.)
        |> set-font Latin          (`Junicode`, 1.0, 0.)
        |> set-math-font `lmodern`
        |> set-hyphen-penalty 100
    in

    let bb = read-block ctx bt in
    let pagecontf _ =
      (|
        text-origin = text-origin-pos;
        text-height = text-height;
      |)
    in
    let pagepartsf _ =
      (|
        header-origin = (0pt, 0pt);
        header-content = block-nil;
        footer-origin = (0pt, 0pt);
        footer-content = block-nil;
      |)
    in
    page-break A4Paper pagecontf pagepartsf bb

end
